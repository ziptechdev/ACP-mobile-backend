{
  "openapi":"3.0.2",
  "info":{
    "title":"ACP Backend API docs - OpenAPI 3.0",
    "description":"This is the ACP backend API specification based on Open API 3.0.2",
    "license":{
      "name":"Apache 2.0",
      "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version":"1.0.0"
  },
  "servers":[
    {
      "url":"/api/v1"
    }
  ],
  "tags":[
    {
      "name":"National Verifier",
      "description":"National Verifier API routes",
      "externalDocs":{
        "description":"Find out more",
        "url":"https://www.usac.org/lifeline/national-verifier/how-to-use-nv/eligibility-check-api/"
      }
    },
    {
      "name":"Users",
      "description":"Users routes"
    }
  ],
  "paths":{
    "/national-verifier/eligibility-check":{
      "post":{
        "tags":[
          "National Verifier"
        ],
        "summary":"Eligibility Check",
        "description":"Perform acp eligibility check by calling the National Verifier API",
        "operationId":"eligibilityCheck",
        "requestBody":{
          "description":"Eligibility Check on National Verifier API",
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/EligibilityCheckPayload"
              }
            }
          },
          "required":true
        },
        "responses":{
          "200":{
            "description":"Successful operation",
            "content":{
              "application/json":{
                "schema":{
                    "oneOf": [
                      { "$ref":"#/components/schemas/EligibilityCheckSuccessResponsePendingCert" },
                      { "$ref":"#/components/schemas/EligibilityCheckSuccessResponsePendingResolution" }
                    ]
                }
              }
            }
          },
          "400":{
            "description":"Bad Request",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500":{
            "description":"Internal Server Error",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/eligibility-register/{eligibilityCheckId}":{
      "post":{
        "tags":[
          "Users"
        ],
        "summary":"Eligibility Register",
        "description":"Register user after they have passed eligibility check on NV using their eligibility check id",
        "operationId":"eligibilityRegister",
        "parameters":[
          {
            "name":"eligibilityCheckId",
            "in":"path",
            "description":"eligibilityCheckId of the user",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "description":"Eligibility Register",
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/EligibilityRegisterBody"
              }
            }
          },
          "required":true
        },
        "responses":{
          "200":{
            "description":"Successful operation - User registered",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/EligibleUser"
                }
              }
            }
          },
          "422":{
            "description":"Unprocessable Entity",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500":{
            "description":"Internal Server Error",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/kyc-register": {
      "post": {
        "tags":[
          "Users"
        ],
        "summary":"KYC Register",
        "description":"Register user with KYC check",
        "operationId":"kycRegister",
        "requestBody":{
          "description":"KYC Register",
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/KycRegisterBody"
              }
            }
          },
          "required":true
        },
        "responses":{
          "200":{
            "description":"Successful operation - User registered",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/KycSuccessResponse"
                }
              }
            }
          },
          "422":{
            "description":"Unprocessable Entity",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500":{
            "description":"Internal Server Error",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify-email": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User email verification",
        "description": "Sends a random 5 digit code to users email",
        "operationId": "verifyEmail",
        "requestBody": {
          "description": "Verify Email",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailBody"
              }
            }
          },
          "required": true
        },
        "responses":{
          "200":{
            "description":"Successful operation - Verification Email sent",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/VerifyEmailSuccessResponse"
                }
              }
            }
          },
          "422":{
            "description":"Unprocessable Entity",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500":{
            "description":"Internal Server Error",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "description": "Logs the user in",
        "operationId": "userLogin",
        "requestBody": {
          "description": "User login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginBody"
              }
            }
          },
          "required": true
        },
        "responses":{
          "200":{
            "description":"User Authenticated",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/UserLoginSuccessResponse"
                }
              }
            }
          },
          "401":{
            "description":"Unauthorized",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422":{
            "description":"Unprocessable Entity",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500":{
            "description":"Internal Server Error",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components":{
    "schemas":{
      "EligibilityCheckPayload":{
        "required":[
          "firstName",
          "lastName",
          "address",
          "state",
          "city",
          "zipCode",
          "dob",
          "eligibilityProgramCode",
          "consentInd"
        ],
        "type":"object",
        "properties":{
          "firstName":{
            "type":"string",
            "example":"John"
          },
          "middleName":{
            "type":"string",
            "example":"Mark"
          },
          "lastName":{
            "type":"string",
            "example":"Doe"
          },
          "address":{
            "type":"string",
            "example":"Drive 10"
          },
          "state":{
            "type":"string",
            "example":"Texas"
          },
          "city":{
            "type":"string",
            "example":"Dallas"
          },
          "zipCode":{
            "type":"string",
            "example":"123456789"
          },
          "phoneNumber":{
            "type":"string",
            "example":"123456789"
          },
          "dateOfBirth":{
            "type":"string",
            "example":"1990-12-01"
          },
          "eligibilityProgramCode":{
            "type":"string",
            "example":"E1, E2, E3"
          },
          "consentInd":{
            "type":"string",
            "example":"Y"
          },
          "socialSecurityNumber":{
            "type":"string",
            "example":"123456789"
          }
        }
      },
      "EligibilityCheckSuccessResponsePendingCert": {
        "type":"object",
        "properties":{
          "eligibilityCheckId":{
            "type":"string",
            "example": "12224332423423f3245234ertjlnmv3"
          },
          "applicationId":{
            "type":"string",
            "example":"SDFBGD3"
          },
          "status":{
            "type": "string",
            "example":"PENDING_CERT"
          },
          "_links":{
            "type":"object",
            "properties": {
              "certification": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "carrierUrl.com"
                  }
                }
              }
            }
          }
        }
      },
      "EligibilityCheckSuccessResponsePendingResolution": {
        "type":"object",
        "properties":{
          "eligibilityCheckId":{
            "type":"string",
            "example": "12224332423423f3245234ertjlnmv3"
          },
          "applicationId":{
            "type":"string",
            "example":"SDFBGD3"
          },
          "status":{
            "type": "string",
            "example":"PENDING_RESOLUTION"
          },
          "failures":{
            "type":"array",
            "items": {
              "type": "string"
            }
          },
          "eligibilityExpirationDate": {
            "type":"string",
            "example":"2023-01-01"
          },
          "lastManualReviewTime": {
            "type":"string",
            "example":"2023-01-01:05:05:05"
          },
          "numberofManualReview": {
            "type":"string",
            "example":"3"
          },
          "rejections":{
            "type":"array",
            "items": {
              "type": "object"
            }
          },
          "_links":{
            "type":"object",
            "properties": {
              "resolution": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "www.url.com"
                  }
                }
              }
            }
          }
        }
      },
      "EligibilityRegisterBody": {
        "type":"object",
        "properties":{
          "user":{
            "type":"object",
            "properties": {
              "username":{
                "type":"string",
                "example":"john.doe@example.com"
              },
              "password":{
                "type":"string",
                "example":"password"
              }
            }
          }
        }
      },
      "EligibleUser": {
        "type":"object",
        "properties":{
          "id":{
            "type":"number",
            "example": 1
          },
          "username":{
            "type":"string",
            "example":"john.doe@example.com"
          },
          "firstName":{
            "type":"string",
            "example":"John"
          },
          "lastName":{
            "type":"string",
            "example": "Doe"
          },
          "middleName":{
            "type":"string",
            "example": "Mark"
          },
          "eligibilityCheckId":{
            "type":"string",
            "example": "2323l4h2lk34n23"
          },
          "applicationId":{
            "type":"string",
            "example": "ewklrn3kl3n2"
          },
          "eligibilityCheckStatus":{
            "type":"string",
            "example": "PENDING_CERT"
          }
        }
      },
      "ErrorResponse": {
        "type":"object",
        "properties":{
          "status":{
            "type":"number",
            "example": 400
          },
          "message":{
            "type":"string",
            "example":"Address is not valid"
          },
          "type":{
            "type":"string",
            "example":"NV_VALIDATION_ERROR"
          },
          "data":{
            "type":"object",
            "example":{}
          }
        }
      },
      "KycRegisterBody": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "username": {
                "type": "string",
                "example": "john.doe@example.com"
              },
              "password":{
                "type":"string",
                "example":"Iamstrong111!"
              },
              "confirmedPassword": {
                "type": "string",
                "example": "Iamstrong111!"
              },
              "phoneNumber": {
                "type": "string",
                "example": "(555) 555-1234"
              },
              "socialSecurityNumber": {
                "type": "string",
                "example": "111-22-3333"
              }
            }
          },
          "bankAccount": {
            "type": "object",
            "properties": {
              "bankName": {
                "type": "string",
                "example": "Example Bank"
              },
              "bankNumber": {
                "type": "string",
                "example": "021000021"
              },
              "accountHolderName": {
                "type": "string",
                "example": "John Doe"
              },
              "accountNumber": {
                "type": "string",
                "example": "13719713158835300"
              },
              "expirationDate": {
                "type": "string",
                "example": "01/23"
              }
            }
          }
        }
      },
      "KycSuccessResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "The request has been fulfilled, resulting in the creation of a new resource."
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "john.doe@example.com"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "phoneNumber": {
                "type": "string",
                "example": "(555) 555-1234"
              }
            }
          }
        }
      },
      "VerifyEmailBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          }
        }
      },
      "VerifyEmailSuccessResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Verification Email sent."
          },
          "data": {
            "type": "object",
            "properties": {
              "verificationCode": {
                "type": "number",
                "example": 12345
              }
            }
          }
        }
      },
      "UserLoginBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "UserLoginSuccessResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "User Authenticated"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "username":{
                "type":"string",
                "example":"john.doe@example.com"
              },
              "firstName":{
                "type":"string",
                "example":"John"
              },
              "middleName":{
                "type":"string",
                "example":"Mark"
              },
              "lastName":{
                "type":"string",
                "example":"Doe"
              },
              "phoneNumber":{
                "type":"string",
                "example":"123456789"
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwidXNlcm5hbWUiOiJreWMucmVnaXN0ZXJlZEBleGFtcGxlLmNvbSIsImZpcnN0TmFtZSI6Ikt5YyIsIm1pZGRsZU5hbWUiOm51bGwsImxhc3ROYW1lIjoiUmVnaXN0ZXJlZCIsInBob25lTnVtYmVyIjoiMTIzNDU2Nzg5IiwiaWF0IjoxNjcxMzE3MjcwLCJleHAiOjE2NzEzMTcyNzN9.RLcEyn5YPETEdFHqncBQN8n1hH9y4eoaNjbqKlJ0Bb0"
              }
            }
          }
        }
      }
    }
  }
}